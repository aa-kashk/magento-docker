version: '3.7'
services:
  mutagen:
    build: ./build/mutagen
    init: true
    container_name: web-mutagen
    volumes:
      - code:/var/www
  web:
    image: nginx:1.21.4-alpine
    hostname: web
    volumes:
      - code:/var/www
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./etc/nginx/server.crt:/etc/nginx/server.crt
      - ./etc/nginx/server.key:/etc/nginx/server.key
      - ./etc/nginx/fetch_env.js:/etc/nginx/fetch_env.js
    networks:
      default:
        aliases:
          - magento.test
    ports:
      - "${WEB_PORT}:80"
      - "${WEBS_PORT}:443"
    depends_on:
      - app
  db:
    image: mariadb:10.4.12
    deploy:
      resources:
        reservations:
          memory: 4096M
    hostname: db
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: "magento"
    volumes:
      - ./etc/mysql/my.cnf:/etc/mysql/conf.d/mysql.cnf
    ports:
      - "${DB_PORT}:3306"
    command: --default-authentication-plugin=mysql_native_password
  app:
    image: slopukhov/php:8.1.8-fpm-buster
    # to re-build image use the following docker file:
    # build:
    #   context: .
    #   dockerfile: build/php/fpm
    hostname: app
    ports:
      - "${SSH_PORT}:22"
      - "9001:9001"
    depends_on:
      - elastic
      - db
    stop_signal: SIGKILL
    env_file:
      - ./.env
    volumes:
      - code:/var/www
      - ./.env:/tmp/.env
      - ./etc/php/app/sendmail:/usr/local/bin/sendmail
      - ./etc/php/tools/magento:/usr/local/bin/magento
      - ./etc/php/tools:/usr/local/bin/magento2:ro
      - ./etc/php/php.ini:/usr/local/etc/php/php.ini:ro
      - ./etc/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./etc/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
    environment:
      #COMPOSER_HOME: /var/www/.composer
      PHP_IDE_CONFIG: serverName=magento.test
    command: sh -c 'service ssh start; php-fpm -R'
  elastic:
    image: elasticsearch:7.17.5
    hostname: elastic
    ports:
      - "${ELASTIC_PORT}:9200"
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
#  redis:
#    image: redis
#    hostname: redis
#    ports:
#      - "${REDIS_PORT}:6379"
#    sysctls:
#      net.core.somaxconn: 1024
#    ulimits:
#      nproc: 65535
#      nofile:
#        soft: 20000
#        hard: 40000
#  rabbit:
#    image: rabbitmq:management
#    hostname: rabbitmq
#    ports:
#      - "${RABBIT_PORT}:15672"
networks:
  default:
    driver: bridge
volumes:
  code:
